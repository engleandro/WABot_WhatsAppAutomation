"""
Django settings for wabot_api project.

Generated by 'django-admin startproject' using Django 3.2.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
from pathlib import Path
import warnings

from dotenv import load_dotenv
from django.utils.translation import ugettext_lazy

warnings.simplefilter("ignore", UserWarning)
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("DJANGO_SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = os.environ.get("ALLOWED_HOSTS").split("; ")


# Application definition

INSTALLED_APPS = [
    # STANDARD DJANGO
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # STANDARD DJANGO-REST
    'rest_framework',
    # INTEXFY APPS
    'wabot',
    # DOCUMENTATION
    'drf_yasg'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware', #to comment
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    #'whitenoise.middleware.WhiteNoiseMiddleware',
    #'plataform_api.middleware.LocaleMiddleware',
]

"""
    CORS configuration
    if DEBUG:
        INSTALLED_APPS += ('corsheaders',)
        MIDDLEWARE.insert(0, 'corsheaders.middleware.CorsMiddleware')
    CORS_ORIGIN_ALLOW_ALL = DEBUG
"""

ROOT_URLCONF = 'wabot_api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'wabot_api.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
"""
'database_prod': {
    'ENGINE': os.environ['DJANGO_SQL_ENGINE'],
    'USER': os.environ['DJANGO_SQL_USER'],
    'PASSWORD': os.environ['DJANGO_SQL_PASSWORD'],
    'HOST': os.environ['DJANGO_SQL_HOST'],
    'PORT': os.environ['DJANGO_SQL_PORT'],
},
"""


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

#AUTH_USER_MODEL = 'customer.User'

AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',},
    ]

"""
PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
    'django.contrib.auth.hashers.Argon2PasswordHasher',
    ]
AUTHENTICATION_BACKENDS = (
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',
    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
    )
"""

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'
LANGUAGES = [
    ('pt-br', ugettext_lazy('Portuguese')),
    ('en', ugettext_lazy('English')),
    ('es', ugettext_lazy('Spanish')),
    ]

ALLOWED_LANGUAGE_CODES = (language[0] for language in LANGUAGES)

TIME_ZONE = 'America/Sao_Paulo'
USE_I18N = True
USE_L10N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

"""
    DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
    AWS_S3_SECURE_URLS = False
    AWS_QUERYSTRING_AUTH = False

    AWS_STORAGE_BUCKET_NAME = os.environ['AWS_STORAGE_BUCKET_NAME']
    AWS_ACCESS_KEY_ID =  os.environ['AWS_ACCESS_KEY_ID']
    AWS_SECRET_ACCESS_KEY = os.environ['AWS_SECRET_ACCESS_KEY']
    AWS_S3_CUSTOM_DOMAIN = f's3.us-east-2.amazonaws.com/{AWS_STORAGE_BUCKET_NAME}'
    AWS_DEFAULT_ACL = None

    # REST Framework Config
    REST_FRAMEWORK = {
        'DEFAULT_PERMISSION_CLASSES': (
            'rest_framework.permissions.IsAuthenticated',
            'plataform_api.authentication.IsActiveAuthentication'
        ),
        'DEFAULT_AUTHENTICATION_CLASSES': (
            'rest_framework_simplejwt.authentication.JWTAuthentication',
            'plataform_api.authentication.ApiTokenAuthentication'
        ),
        #'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
        'DEFAULT_PAGINATION_CLASS': 'plataform_api.utils.CustomPageNumberPagination',
        'PAGE_SIZE': 10,
        'DATETIME_FORMAT': '%d/%m/%Y %H:%M:%S',
        'DATETIME_INPUT_FORMATS': ('%d/%m/%Y %H:%M:%S',),
        'DATE_FORMAT': '%d/%m/%Y',
        'DATE_INPUT_FORMATS': ('%d/%m/%Y',),
        'EXCEPTION_HANDLER': 'plataform_api.utils.custom_exception_handler',
        'DEFAULT_RENDERER_CLASSES' : (
            'plataform_api.renderers.CustomJSONRenderer',
            'rest_framework.renderers.JSONRenderer',
            'rest_framework.renderers.BrowsableAPIRenderer'
            ),
        }

    SIMPLE_JWT = {
        'AUTH_HEADER_TYPES': ('Bearer',),
        'USER_ID_FIELD': 'id',
        'USER_ID_CLAIM': 'user_id',

        'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.SlidingToken',),

        'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
        'SLIDING_TOKEN_LIFETIME': timedelta(days=2),
        'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=5),
        }

    REST_AUTH_SERIALIZERS = {
        'USER_DETAILS_SERIALIZER': 'customer.serializers.UserSerializer',
        }

    # Allauth configs
    SITE_ID = 2 # Id do "intexfy.com" na tabela Site (manter em 2) Usado nos emails e outras coisas do django admin
    FRONT_URL = "https://app.intexfy.com/"
    SUPPORT_USER_ID = 33
    ACCOUNT_USER_MODEL_USERNAME_FIELD = None
    ACCOUNT_EMAIL_REQUIRED = True
    ACCOUNT_UNIQUE_EMAIL = True
    ACCOUNT_USERNAME_REQUIRED = False
    ACCOUNT_AUTHENTICATION_METHOD = 'email'
    ACCOUNT_EMAIL_VERIFICATION = 'mandatory'
    ACCOUNT_CONFIRM_EMAIL_ON_GET = True
    ACCOUNT_EMAIL_CONFIRMATION_ANONYMOUS_REDIRECT_URL = '/accounts/confirm-email/done/'
    CCOUNT_EMAIL_CONFIRMATION_AUTHENTICATED_REDIRECT_URL = '/accounts/confirm-email/done/'

    ACCOUNT_DEFAULT_HTTP_PROTOCOL="http"
    #EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend' # DEBUG SETTING
    EMAIL_BACKEND = 'django_ses.SESBackend' # Production Setting
    DEFAULT_FROM_EMAIL = 'noreply@intexfy.com'

    HEALTH_CHECK = {
        'DISK_USAGE_MAX': 90,  # percent
        'MEMORY_MIN': 100,    # in MB
        }
"""